<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAALAAAAGAAAAB0AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAGAAA
        AAsAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAHgAAAF8DAwOXBAQEogQEBKMEBASjBAQEowQE
        BKMEBASjBAQEowQEBKMEBASjBAQEowQEBKMEBASjBAQEowQEBKMEBASjBAQEowQEBKMEBASjBAQEowQE
        BKIDAwOYAAAAYAAAAB8AAAACAAAAAAAAAAAAAAAAAAAAAAAAABEYGBh8k5OT8szMzP/U1NT/1tbW/9fX
        1//Z2dn/2tra/9zc3P/e3t7/39/f/+Hh4f/i4uL/4uLi/+Li4v/g4OD/39/f/97e3v/c3Nz/2tra/9jY
        2P/X19f/1dXV/83Nzf+Tk5PzGBgYfQAAABEAAAAAAAAAAAAAAAAAAAAAAAAALJCQkO/R0dH/0dHR/9LS
        0v/T09P/1dXV/9fX1//a2tr/3d3d/9/f3//i4uL/4+Pj/+Tk5P/k5OT/5OTk/+Pj4//h4eH/39/f/9zc
        3P/a2tr/19fX/9XV1f/U1NT/0tLS/9HR0f+VlZXvAAAALQAAAAAAAAAAAAAAAAAAAAACAgJXzc3N/9HR
        0f/R0dH/0tLS/9TU1P/X19f/2dnZ/9zc3P/g4OD/4+Pj/+Xl5f/n5+f/6Ojo/+jo6P/n5+f/5ubm/+Tk
        5P/i4uL/39/f/9zc3P/Z2dn/19fX/9TU1P/T09P/0tLS/87Ozv8FBQVZAAAAAQAAAAAAAAAAAAAAAAAA
        AFzT09P/0NDQ/9HR0f/T09P/1dXV/9jY2P/b29v/4ODg/+Pj4//m5ub/6Ojo/+vr6//s7Oz/7Ozs/+zs
        7P/q6ur/6Ojo/+Xl5f/i4uL/39/f/9vb2//Y2Nj/1dXV/9PT0//S0tL/09PT/wcHB2AAAAABAAAAAAAA
        AAAAAAAAAAAAXNPT0//Q0ND/0tLS/9TU1P/W1tb/2tra/97e3v/i4uL/5ubm/+rq6v/s7Oz/7+/v//Dw
        8P/x8fH/8PDw/+7u7v/s7Oz/6enp/+Xl5f/h4eH/3d3d/9nZ2f/W1tb/1NTU/9LS0v/U1NT/BwcHYAAA
        AAEAAAAAAAAAAAAAAAAAAABc09PT/9HR0f/S0tL/1NTU/9fX1//b29v/4ODg/+Tk5P/o6Oj/7Ozs/+/v
        7//z8/P/9fX1//X19f/09PT/8vLy/+/v7//r6+v/5+fn/+Pj4//f39//29vb/9fX1//V1dX/0tLS/9TU
        1P8HBwdgAAAAAQAAAAAAAAAAAAAAAAAAAFzT09P/0dHR/9LS0v/V1dX/2NjY/93d3f/h4eH/5ubm/+rq
        6v/u7u7/8/Pz//f39//6+vr/+vr7//n5+f/29vb/8vLy/+7u7v/p6en/5eXl/+Hh4f/c3Nz/2NjY/9XV
        1f/T09P/1NTU/wcHB2AAAAABAAAAAAAAAAAAAAAAAAAAXNPT0//R0dH/09PT/9XV1f/Z2dn/3t7e/+Li
        4v/n5+f/7Ozt//Pz9P/Q0ND/eXl5/05OTv9KSkr/bm5u/7+/wP/39/j/8PDw/+vr6//m5ub/4uLi/93d
        3f/Y2Nj/1tbW/9PT0//U1NT/BwcHYAAAAAEAAAAAAAAAAAAAAAAAAABc09PT/9HR0f/T09P/1tbW/9nZ
        2f/e3t7/4+Pj/+jo6f/v7/H/fn5+/xcXF/9LS0v/f39//4ODg/9YWFj/GRkZ/2BgYP/r6+z/7Ozt/+fn
        5//j4+P/3d3d/9nZ2f/V1dX/09PT/9TU1P8HBwdgAAAAAQAAAAAAAAAAAAAAAAAAAFzT09P/0dHR/9PT
        0//W1tb/2tra/97e3v/j4+P/6urs/35+fv8hISH/rq6u/8zMzP/CwsL/wsLC/8fHx//CwsL/MDAw/1dX
        V//v7/H/5+fn/+Li4v/d3d3/2dnZ/9bW1v/T09P/1NTU/wcHB2AAAAABAAAAAAAAAAAAAAAAAAAAXNPT
        0//R0dH/09PU/9bW1v/a2tv/39/g/+Tk5f/MzND/FBQU/6qqqv/Ozs7/4uLi//Hx8f/x8fH/6enp/8nJ
        yf/IyMj/Ghoa/6urrv/n5+n/4uLj/93d3v/Z2dr/1tbW/9PT0//U1NT/BwcHYAAAAAEAAAAAAAAAAAAA
        AAAAAABc5ubo/+Xl5//T09X/wMDB/6ysrf+ampr/h4eH/01NTf8/Pz//5ubm/+Dg4P/z8/P/8/Pz//Pz
        8//z8/P/6urq/93d3f9mZmb/Ozs7/4uLi/+cnJz/r6+w/8PDxf/W1tj/5ubo/+bm6P8HBwdgAAAAAQAA
        AAAAAAAAAAAAAAAAAFxRUVH/Kioq/yAgIP8YGBj/EhIS/wwMDP8ICAj/DQ0N/3Jycv/k5OT/+fn5//r6
        +v/6+vr/+vr6//r6+v/5+fn/5+fn/5ubm/8PDw//BwcH/wsLC/8QEBD/FxcX/x8fH/8pKSn/UVFR/wUF
        BWAAAAABAAAAAAAAAAAAAAAAAAAAXDU1Sv8jI03/ISFa/x8fZv8fH3b/ISGF/yYmlf8cHEH/c3Nz/+/v
        7//+/v7////////////////////////////w8PD/nZ2d/xYWJv8rK6T/ISGL/yIigf8gIHD/IiJj/yUl
        Vf80NFL/AgICYAAAAAEAAAAAAAAAAAAAAAAAAABcNTWg/yAgkf8YGIz/ExOJ/xERiP8QEIr/FxeU/xwc
        Yv8+Pj7//Pz8//r6+v///////////////////////Pz8//r6+v9paWn/FxdG/xwcnP8REYr/ERGI/xMT
        if8XF4r/Hh6P/zMznP8CAgVfAAAAAQAAAAAAAAAAAAAAAAAAAFwtLYj/GRmB/xISgv8QEIT/EBCH/xER
        i/8VFZH/KCif/wgICf+2trb//v7+//7+/v////////////7+/v/9/f3/2NjY/xAQEP8kJIX/FxeV/xIS
        jP8REYj/ERGF/xMTg/8YGIL/LCyI/wICBV8AAAABAAAAAAAAAAAAAAAAAAAAXC0tif8ZGYL/ExOE/xIS
        hv8SEor/ExOP/xYWlP8jI6f/Hh5j/xYWFv+6urr//////////////////////9PT0/8pKSn/FRVB/ykp
        sP8YGJX/FRWQ/xMTjP8TE4j/ExOF/xkZhP8sLIr/AgIFXwAAAAEAAAAAAAAAAAAAAAAAAABcLS2K/xkZ
        hP8UFIb/ExOJ/xQUjf8WFpL/GBiX/x0dnf8yMrX/IyNl/wMDBP9ISEj/hISE/4iIiP9VVVX/CAgI/xsb
        Sv81NbX/ICCf/xoamf8XF5T/FRWP/xQUi/8VFYj/GRmG/ywsi/8CAgVfAAAAAQAAAAAAAAAAAAAAAAAA
        AFwuLov/GRmG/xUViP8UFIz/FRWQ/xgYlv8bG5z/ISGg/ykpo/85ObP/QUGo/ygoYP8YGDf/Fxc0/yUl
        V/89PZr/Pj64/ywspP8jI6H/HR2e/xkZl/8WFpL/FRWN/xYWiv8ZGYf/LS2M/wICBV8AAAABAAAAAAAA
        AAAAAAAAAAAAXC8vjf8bG4f/FhaK/xYWjv8XF5P/GhqZ/x4eoP8lJaT/LS2m/zU1qP8+Pqv/SEi0/1FR
        vf9TU77/Skq2/0BArf83N6j/Ly+n/ycnpf8gIKL/HByb/xgYlf8XF5D/FxeM/xoaif8uLo3/AgIFXwAA
        AAEAAAAAAAAAAAAAAAAAAABcMDCO/x0dif8YGIz/GBiQ/xoalv8dHZ3/ISGk/ygoqP8xMar/OTms/0FB
        rf9HR6//TU2w/05OsP9JSa//Q0Ou/zs7rP8zM6v/Kyup/yMjpv8fH5//HByZ/xkZkv8ZGY7/HByL/y8v
        j/8CAgVfAAAAAQAAAAAAAAAAAAAAAAAAAFwxMY//Hx+L/xoajv8bG5P/HR2Z/yEhoP8lJaf/LCyt/zQ0
        r/89PbH/RUWz/0pKtf9OTrb/T0+2/0xMtf9GRrT/Pz+y/zc3sP8uLq3/Jyep/yIiov8eHpv/HByV/xsb
        kP8fH4z/MDCQ/wICBV8AAAABAAAAAAAAAAAAAAAAAAAAWTIyj/8iIoz/HR2Q/x4elf8gIJv/JCSi/ygo
        qv8vL7H/Nze1/0BAt/9HR7n/TEy7/1BQvP9QULz/Tk67/0hIuv9CQrj/OTm1/zExsv8qKqz/Jial/yIi
        nf8fH5f/Hh6S/yIijv8xMZD/AgIFXAAAAAAAAAAAAAAAAAAAAAADAwNIMzOL/yUljf8hIZL/ISGX/yQk
        nv8nJ6X/LS2s/zIytf86Orr/QkK9/0lJwP9OTsL/UVHD/1FRw/9PT8P/SkrB/0REvv88PLv/NDS2/y4u
        r/8pKaf/Jiag/yMjmf8iIpT/JSWP/zIyjf8DAwNKAAAAAAAAAAAAAAAAAAAAAAAAAAwsLGnkJiaN/yUl
        k/8lJZn/KCif/ysrp/8xMa7/Nja3/zw8vv9ERMT/SkrG/09Pyf9SUsr/UlLK/1BQyf9MTMf/RkbE/z4+
        wP84OLn/MjKx/y0tqf8pKaH/Jiab/yUllf8mJo7/LCxp5QAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAABwc
        LzYsLGvjMjKT/zIyn/82NqX/Ozus/0BAtP9FRbz/SkrD/1BQyv9VVc//WlrS/1xc0/9dXdP/W1vS/1ZW
        0P9RUcv/TEzF/0ZGvv9BQbb/PDyu/zg4p/8zM6H/MjKV/y8vceMXFyk3AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUEBAQ5BwcHRAcHB0QHBwdEBwcHRAcHB0QHBwdEBwcHRAcHB0QHBwtEBwcLRAcH
        C0QHBwtEBwcLRAcHB0QHBwdEBwcHRAcHB0QHBwdEBwcHRAcHB0QEBAg5AAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAAAfAAAADwAAAA8AAAAPAAAABwAAAAcAAAAHAAAABwAAAAcAA
        AAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAA
        AAPAAAADwAAAA+AAAAfwAAAP//////////8=
</value>
  </data>
</root>